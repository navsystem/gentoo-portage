diff -uNr aksparlnx-1.7-x86_64_orig/aksparpub.c aksparlnx-1.7-x86_64/aksparpub.c
--- aksparlnx-1.7-x86_64_orig/aksparpub.c	2011-09-30 11:34:42.000000000 +0700
+++ aksparlnx-1.7-x86_64/aksparpub.c	2011-09-30 11:33:46.000000000 +0700
@@ -17,8 +17,12 @@
 #if LINUX_VERSION_CODE < 0x20610
 #include <linux/config.h>
 #else
+#if LINUX_VERSION_CODE >= 132641
+#include <generated/autoconf.h>
+#else
 #include <linux/autoconf.h>
 #endif
+#endif
 
 #if defined(CONFIG_SMP) && !defined(__SMP__)
 #define __SMP__
@@ -53,7 +57,7 @@
 #if defined(__x86_64__) && LINUX_VERSION_CODE < 0x2060E
 #include <linux/ioctl32.h>
 #endif
-#if defined(__x86_64__) && LINUX_VERSION_CODE >= 0x2060E
+#if defined(__x86_64__) && LINUX_VERSION_CODE >= 0x2060E && LINUX_VERSION_CODE < KERNEL_VERSION(2,6,39)
 #include <linux/smp_lock.h>
 #endif
 #ifndef LINUX
@@ -117,10 +121,18 @@
 
 static char hardlock[] = "aksparlnx";
 
-#ifdef DECLARE_MUTEX
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,37)
+#    ifdef DECLARE_MUTEX
 static DECLARE_MUTEX(hl_sem);
+#    else
+static struct semaphore hl_sem = MUTEX;
+#    endif
 #else
+#    ifdef DEFINE_SEMAPHORE
+static DEFINE_SEMAPHORE(hl_sem);
+#    else
 static struct semaphore hl_sem = MUTEX;
+#    endif
 #endif
 
 static struct _porttabentry hl_pports[MAX_HL_PORTS]/* = { [0 ... MAX_HL_PORTS-1 ] = { 0, 0, NULL, 0 } }*/;
@@ -256,14 +268,22 @@
 
     switch(cmd) {
         case HLAPI_CALL:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,39)
             lock_kernel();
+#endif
             ret = hl_api_ioctl(file, cmd, arg, USER32);
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,39)
             unlock_kernel();
+#endif
             break;
         default:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,39)
             lock_kernel();
+#endif
             ret = hl_ioctl(file->f_dentry->d_inode, file, cmd, arg);
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,39)
             unlock_kernel();
+#endif
             break;
     }
     return ret;
@@ -374,11 +394,13 @@
 
 static struct file_operations hl_fops = {
     .owner     = THIS_MODULE,
-    .ioctl     = hl_ioctl,
     .open      = hl_open,
     .release   = hl_release,
 #if defined(__x86_64__) && LINUX_VERSION_CODE >= 0x2060E
     .compat_ioctl = hl_compat_ioctl,
+    .unlocked_ioctl     = hl_compat_ioctl,
+#else
+    .ioctl     = hl_ioctl,
 #endif
 };
 
