From c9068d93c19e18c3f07949ed7cf9165828f6755c Mon Sep 17 00:00:00 2001
From: Jehan Monnier <jehan.monnier@linphone.org>
Date: Wed, 25 Jun 2014 09:02:08 +0200
Subject: [PATCH 1/2] fix ffmpeg old_codec_ids detection

---
 acinclude.m4            | 18 ++++++++++++++++++
 src/utils/ffmpeg-priv.h | 14 ++++++++++++--
 2 files changed, 30 insertions(+), 2 deletions(-)

diff --git a/acinclude.m4 b/acinclude.m4
index b0ff651..dd4d2f5 100644
--- a/acinclude.m4
+++ b/acinclude.m4
@@ -122,6 +122,24 @@ AC_DEFUN([MS_CHECK_VIDEO],[
 			CPPFLAGS_save=$CPPFLAGS
 			CPPFLAGS="$FFMPEG_CFLAGS $CPPFLAGS"
 			AC_CHECK_HEADERS(libavcodec/avcodec.h)
+			AC_CHECK_HEADER(libavcodec/old_codec_ids.h,[ old_codec_ids_found=yes
+                                                                     AC_DEFINE(HAVE_AVCODEC_OLD_CODEC_IDS,1,[for compatibility purpose with old ffmpeg])]
+                                                                     ,[old_codec_ids_found=no],[#include "libavcodec/avcodec.h"])
+			AC_MSG_CHECKING([AV_CODEC_ID_SNOW])
+			AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <libavcodec/avcodec.h>]],
+                                        		[[enum AVCodecID toto=AV_CODEC_ID_SNOW;if(toto){}]])]
+                                           ,[if test x$old_codec_ids_found = xno ; then
+						AC_DEFINE(CODEC_ID_SNOW,AV_CODEC_ID_SNOW,[for compatibility purpose with old ffmpeg])
+					     fi
+                                            AC_DEFINE(HAVE_AVCODEC_SNOW,1,[for compatibility purpose with old ffmpeg])
+                                            AC_MSG_RESULT([found])]
+                                           ,[AC_MSG_RESULT([not found])])
+			AC_MSG_CHECKING([CODEC_ID_SNOW])
+			AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <libavcodec/avcodec.h>]],
+                                        		[[enum CodecID toto=CODEC_ID_SNOW;if (toto){}]])]
+                                           ,[AC_DEFINE(HAVE_AVCODEC_SNOW,1,[for compatibility purpose with old ffmpeg])
+                                           AC_MSG_RESULT([found])]
+                                           ,[AC_MSG_RESULT([not found])])
 			CPPFLAGS=$CPPFLAGS_save
 
 			dnl to workaround a bug on debian and ubuntu, check if libavcodec needs -lvorbisenc to compile	
diff --git a/src/utils/ffmpeg-priv.h b/src/utils/ffmpeg-priv.h
index 8723be2..d7d768b 100644
--- a/src/utils/ffmpeg-priv.h
+++ b/src/utils/ffmpeg-priv.h
@@ -69,12 +69,22 @@ static inline int avcodec_decode_video2(AVCodecContext *avctx, AVFrame *picture,
 	return avcodec_decode_video(avctx,picture, got_picture_ptr,avpkt->data,avpkt->size);
 }
 #endif
-#if (LIBAVCODEC_VERSION_MAJOR >= 56)
+#if HAVE_AVCODEC_OLD_CODEC_IDS 
 #include <libavcodec/old_codec_ids.h>
 #endif
-#if LIBAVCODEC_VERSION_INT >= AV_VERSION_INT(54,25,0)
+
+#if LIBAVCODEC_VERSION_INT >= AV_VERSION_INT(54,25,0) 
+/*CODEC_ID_* and CodecID have been deprecated for a long time and this release removes it altogether. Please use AV_CODEC_ID_* and AVCodecID instead.*/
 #define CodecID AVCodecID
+#ifndef HAVE_AVCODEC_OLD_CODEC_IDS
+	#define CODEC_ID_H264 AV_CODEC_ID_H264 
+	#define CODEC_ID_H263 AV_CODEC_ID_H263 
+	#define CODEC_ID_H263P AV_CODEC_ID_H263P 
+	#define CODEC_ID_MPEG4 AV_CODEC_ID_MPEG4 
+	#define CODEC_ID_MJPEG AV_CODEC_ID_MJPEG 
+#endif
 #endif
+
 #ifdef FF_API_ALLOC_CONTEXT
 #if !FF_API_ALLOC_CONTEXT
 AVCodecContext *avcodec_alloc_context(void); 
-- 
2.3.2

From 66388e16c0a22a0ef610c1a3333024580fbc2c64 Mon Sep 17 00:00:00 2001
From: Reuben D'Netto <rdnetto@gmail.com>
Date: Sun, 22 Mar 2015 12:50:33 +1100
Subject: [PATCH 2/2] Fix to compile against libav10

Patch taken from https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=739314 with some alterations
---
 build/iphone/voipdescs.h      |   2 -
 build/win32native/voipdescs.h |   4 --
 src/videofilters/h264dec.c    |   2 +-
 src/videofilters/jpegwriter.c |  16 +++----
 src/videofilters/nowebcam.c   |  17 +++++--
 src/videofilters/videodec.c   |  85 ++++----------------------------
 src/videofilters/videoenc.c   | 109 +++++++++++-------------------------------
 7 files changed, 59 insertions(+), 176 deletions(-)

diff --git a/build/iphone/voipdescs.h b/build/iphone/voipdescs.h
index 0463b9d..62d45dd 100755
--- a/build/iphone/voipdescs.h
+++ b/build/iphone/voipdescs.h
@@ -26,7 +26,6 @@ extern MSFilterDesc au_write_desc;
 extern MSFilterDesc ms_mpeg4_dec_desc;
 extern MSFilterDesc ms_h263_dec_desc;
 extern MSFilterDesc ms_h263_old_dec_desc;
-extern MSFilterDesc ms_snow_dec_desc;
 extern MSFilterDesc ms_jpeg_dec_desc;
 extern MSFilterDesc ms_mjpeg_dec_desc;
 extern MSFilterDesc ms_pix_conv_desc;
@@ -76,7 +75,6 @@ MSFilterDesc * ms_voip_filter_descs[]={
 &ms_mpeg4_dec_desc,
 &ms_h263_dec_desc,
 &ms_h263_old_dec_desc,
-&ms_snow_dec_desc,
 &ms_jpeg_dec_desc,
 &ms_mjpeg_dec_desc,
 &ms_pix_conv_desc,
diff --git a/build/win32native/voipdescs.h b/build/win32native/voipdescs.h
index b7458ac..529fec0 100644
--- a/build/win32native/voipdescs.h
+++ b/build/win32native/voipdescs.h
@@ -24,8 +24,6 @@ extern MSFilterDesc ms_h263_old_dec_desc;
 extern MSFilterDesc ms_mpeg4_enc_desc;
 extern MSFilterDesc ms_mpeg4_dec_desc;
 extern MSFilterDesc ms_h264_dec_desc;
-extern MSFilterDesc ms_snow_enc_desc;
-extern MSFilterDesc ms_snow_dec_desc;
 extern MSFilterDesc ms_theora_enc_desc;
 extern MSFilterDesc ms_theora_dec_desc;
 extern MSFilterDesc ms_mjpeg_enc_desc;
@@ -73,8 +71,6 @@ MSFilterDesc * ms_voip_filter_descs[]={
 &ms_mpeg4_enc_desc,
 &ms_mpeg4_dec_desc,
 &ms_h264_dec_desc,
-&ms_snow_enc_desc,
-&ms_snow_dec_desc,
 &ms_theora_enc_desc,
 &ms_theora_dec_desc,
 &ms_mjpeg_enc_desc,
diff --git a/src/videofilters/h264dec.c b/src/videofilters/h264dec.c
index f306723..da95745 100644
--- a/src/videofilters/h264dec.c
+++ b/src/videofilters/h264dec.c
@@ -56,7 +56,7 @@ static void ffmpeg_init(){
 static void dec_open(DecData *d){
 	AVCodec *codec;
 	int error;
-	codec=avcodec_find_decoder(CODEC_ID_H264);
+	codec=avcodec_find_decoder(AV_CODEC_ID_H264);
 	if (codec==NULL) ms_fatal("Could not find H264 decoder in ffmpeg.");
 	avcodec_get_context_defaults3(&d->av_context, NULL);
 	error=avcodec_open2(&d->av_context,codec, NULL);
diff --git a/src/videofilters/jpegwriter.c b/src/videofilters/jpegwriter.c
index 96f5d7f..b629155 100644
--- a/src/videofilters/jpegwriter.c
+++ b/src/videofilters/jpegwriter.c
@@ -36,9 +36,9 @@ typedef struct {
 
 static void jpg_init(MSFilter *f){
 	JpegWriter *s=ms_new0(JpegWriter,1);
-	s->codec=avcodec_find_encoder(CODEC_ID_MJPEG);
+	s->codec=avcodec_find_encoder(AV_CODEC_ID_MJPEG);
 	if (s->codec==NULL){
-		ms_error("Could not find CODEC_ID_MJPEG !");
+		ms_error("Could not find AV_CODEC_ID_MJPEG !");
 	}
 	f->data=s;
 }
@@ -83,10 +83,9 @@ static void jpg_process(MSFilter *f){
 		MSPicture yuvbuf, yuvjpeg;
 		mblk_t *m=ms_queue_peek_last(f->inputs[0]);
 		if (ms_yuv_buf_init_from_mblk(&yuvbuf,m)==0){
-			int error;
-			int comp_buf_sz=msgdsize(m);
-			uint8_t *comp_buf=(uint8_t*)alloca(comp_buf_sz);
+			int error, got_output;
 			AVFrame pict;
+			AVPacket pkt = { 0 };
 			mblk_t *jpegm;
 			struct SwsContext *sws_ctx;
 			
@@ -128,16 +127,17 @@ static void jpg_process(MSFilter *f){
 			
 			avcodec_get_frame_defaults(&pict);
 			avpicture_fill((AVPicture*)&pict,(uint8_t*)jpegm->b_rptr,avctx->pix_fmt,avctx->width,avctx->height);
-			error=avcodec_encode_video(avctx, (uint8_t*)comp_buf,comp_buf_sz, &pict);
+			error=avcodec_encode_video2(avctx, &pkt, &pict, &got_output);
 			if (error<0){
 				ms_error("Could not encode jpeg picture.");
-			}else{
-				if (fwrite(comp_buf,error,1,s->file)>0){
+			}else if (got_output) {
+				if (fwrite(pkt.data,pkt.size,1,s->file)>0){
 					ms_message("Snapshot done");
 				}else{
 					ms_error("Error writing snapshot.");
 				}
 			}
+			av_packet_unref(&pkt);
 			cleanup(s,avctx);
 			freemsg(jpegm);
 		}
diff --git a/src/videofilters/nowebcam.c b/src/videofilters/nowebcam.c
index 329c453..08e282b 100644
--- a/src/videofilters/nowebcam.c
+++ b/src/videofilters/nowebcam.c
@@ -56,20 +56,25 @@ static mblk_t *jpeg2yuv(uint8_t *jpgbuf, int bufsize, MSVideoSize *reqsize){
 #ifndef NO_FFMPEG
 	AVCodecContext av_context;
 	int got_picture=0;
-	AVFrame orig;
+	AVFrame *orig;
 	mblk_t *ret;
 	struct SwsContext *sws_ctx;
 	AVPacket pkt;
 	MSPicture dest;
-	AVCodec *codec=avcodec_find_decoder(CODEC_ID_MJPEG);
+	AVCodec *codec=avcodec_find_decoder(AV_CODEC_ID_MJPEG);
 
 	if (codec==NULL){
 		ms_error("Could not find MJPEG decoder in ffmpeg.");
 		return NULL;
 	}
 
+	orig = av_frame_alloc();
+	if (!orig)
+		return NULL;
+
 	avcodec_get_context_defaults3(&av_context, NULL);
 	if (avcodec_open2(&av_context,codec,NULL)<0){
+		av_frame_free(&orig);
 		ms_error("jpeg2yuv: avcodec_open2 failed");
 		return NULL;
 	}
@@ -79,6 +84,7 @@ static mblk_t *jpeg2yuv(uint8_t *jpgbuf, int bufsize, MSVideoSize *reqsize){
 
 	if (avcodec_decode_video2(&av_context,&orig,&got_picture,&pkt) < 0) {
 		ms_error("jpeg2yuv: avcodec_decode_video failed");
+		av_frame_free(&orig);
 		avcodec_close(&av_context);
 		return NULL;
 	}
@@ -90,24 +96,27 @@ static mblk_t *jpeg2yuv(uint8_t *jpgbuf, int bufsize, MSVideoSize *reqsize){
                 NULL, NULL, NULL);
 	if (sws_ctx==NULL) {
 		ms_error("jpeg2yuv: ms_sws_getContext() failed.");
+		av_frame_free(&orig);
 		avcodec_close(&av_context);
 		freemsg(ret);
 		return NULL;
 	}
 
 #if LIBSWSCALE_VERSION_INT >= AV_VERSION_INT(0,9,0)	
-	if (sws_scale(sws_ctx,(const uint8_t* const *)orig.data,orig.linesize,0,av_context.height,dest.planes,dest.strides)<0){
+	if (sws_scale(sws_ctx,(const uint8_t* const *)orig->data,orig->linesize,0,av_context.height,dest.planes,dest.strides)<0){
 #else
-	if (sws_scale(sws_ctx,(uint8_t**)orig.data,orig.linesize,0,av_context.height,dest.planes,dest.strides)<0){
+	if (sws_scale(sws_ctx,(uint8_t**)orig->data,orig->linesize,0,av_context.height,dest.planes,dest.strides)<0){
 #endif
 		ms_error("jpeg2yuv: ms_sws_scale() failed.");
 		sws_freeContext(sws_ctx);
 		avcodec_close(&av_context);
+		av_frame_free(&orig);
 		freemsg(ret);
 		return NULL;
 	}
 	sws_freeContext(sws_ctx);
 	avcodec_close(&av_context);
+	av_frame_free(&orig);
 	return ret;
 #elif TARGET_OS_IPHONE
 	MSPicture dest;
diff --git a/src/videofilters/videodec.c b/src/videofilters/videodec.c
index c52e207..99f80fd 100644
--- a/src/videofilters/videodec.c
+++ b/src/videofilters/videodec.c
@@ -44,7 +44,6 @@ typedef struct DecState{
 	uint8_t dci[512];
 	int dci_size;
 	uint64_t last_error_reported_time;
-	bool_t snow_initialized;
 	bool_t first_image_decoded;
 }DecState;
 
@@ -59,7 +58,6 @@ static void dec_init(MSFilter *f, enum CodecID cid){
 	s->input=NULL;
 	s->yuv_msg=NULL;
 	s->output_pix_fmt=PIX_FMT_YUV420P;
-	s->snow_initialized=FALSE;
 	s->outbuf.w=0;
 	s->outbuf.h=0;
 	s->sws_ctx=NULL;
@@ -77,19 +75,15 @@ static void dec_init(MSFilter *f, enum CodecID cid){
 }
 
 static void dec_h263_init(MSFilter *f){
-	dec_init(f,CODEC_ID_H263);
+	dec_init(f,AV_CODEC_ID_H263);
 }
 
 static void dec_mpeg4_init(MSFilter *f){
-	dec_init(f,CODEC_ID_MPEG4);
+	dec_init(f,AV_CODEC_ID_MPEG4);
 }
 
 static void dec_mjpeg_init(MSFilter *f){
-	dec_init(f,CODEC_ID_MJPEG);
-}
-
-static void dec_snow_init(MSFilter *f){
-	dec_init(f,CODEC_ID_SNOW);
+	dec_init(f,AV_CODEC_ID_MJPEG);
 }
 
 static void dec_uninit(MSFilter *f){
@@ -133,14 +127,11 @@ static void dec_preprocess(MSFilter *f){
 	
 	s->first_image_decoded = FALSE;
 	if (s->av_context.codec==NULL){
-		/* we must know picture size before initializing snow decoder*/
-		if (s->codec!=CODEC_ID_SNOW){
-			error=avcodec_open2(&s->av_context, s->av_codec,NULL);
-			if (error!=0) ms_error("avcodec_open2() failed: %i",error);
-			if (s->codec==CODEC_ID_MPEG4 && s->dci_size>0){
-				s->av_context.extradata=s->dci;
-				s->av_context.extradata_size=s->dci_size;
-			}
+		error=avcodec_open2(&s->av_context, s->av_codec, NULL);
+		if (error!=0) ms_error("avcodec_open2() failed: %i",error);
+		if (s->codec==AV_CODEC_ID_MPEG4 && s->dci_size>0){
+			s->av_context.extradata=s->dci;
+			s->av_context.extradata_size=s->dci_size;
 		}
 	}
 }
@@ -218,30 +209,6 @@ static mblk_t * skip_rfc2429_header(mblk_t *inm){
 	return NULL;
 }
 
-static mblk_t * parse_snow_header(DecState *s,mblk_t *inm){
-	if (msgdsize(inm) >= 4){
-		uint32_t h = ntohl(*(uint32_t*)inm->b_rptr);
-		if (!s->snow_initialized){
-			int error;
-			s->av_context.width=h>>16;
-			s->av_context.height=h&0xffff;
-			error=avcodec_open2(&s->av_context, s->av_codec, NULL);
-			if (error!=0) ms_error("avcodec_open2() failed for snow: %i",error);
-			else {
-				s->snow_initialized=TRUE;
-				ms_message("Snow decoder initialized,size=%ix%i",
-				s->av_context.width,
-				s->av_context.height);
-			}
-		}
-		inm->b_rptr+=4;
-		return inm;
-	}else {
-		freemsg(inm);
-		return NULL;
-	}
-}
-
 struct jpeghdr {
 	//unsigned int tspec:8;   /* type-specific field */
 	unsigned int off:32;    /* fragment byte offset */
@@ -643,8 +610,7 @@ static void dec_process_frame(MSFilter *f, mblk_t *inm){
 	
 	if (f->desc->id==MS_H263_DEC_ID) inm=skip_rfc2429_header(inm);
 	else if (f->desc->id==MS_H263_OLD_DEC_ID) inm=skip_rfc2190_header(inm);
-	else if (s->codec==CODEC_ID_SNOW && s->input==NULL) inm=parse_snow_header(s,inm);
-	else if (s->codec==CODEC_ID_MJPEG && f->desc->id==MS_JPEG_DEC_ID) inm=read_rfc2435_header(s,inm);
+	else if (s->codec==AV_CODEC_ID_MJPEG && f->desc->id==MS_JPEG_DEC_ID) inm=read_rfc2435_header(s,inm);
 
 	if (inm){
 		/* accumulate the video packet until we have the rtp markbit*/
@@ -807,22 +773,6 @@ MSFilterDesc ms_mjpeg_dec_desc={
 	methods
 };
 
-MSFilterDesc ms_snow_dec_desc={
-	MS_SNOW_DEC_ID,
-	"MSSnowDec",
-	N_("A snow decoder using ffmpeg library"),
-	MS_FILTER_DECODER,
-	"snow",
-	1,
-	1,
-	dec_snow_init,
-	dec_preprocess,
-	dec_process,
-	dec_postprocess,
-	dec_uninit,
-	methods
-};
-
 #else
 
 MSFilterDesc ms_h263_dec_desc={
@@ -906,28 +856,11 @@ MSFilterDesc ms_mjpeg_dec_desc={
 	.methods= methods
 };
 
-MSFilterDesc ms_snow_dec_desc={
-	.id=MS_SNOW_DEC_ID,
-	.name="MSSnowDec",
-	.text="A snow decoder using ffmpeg library",
-	.category=MS_FILTER_DECODER,
-	.enc_fmt="x-snow",
-	.ninputs=1,
-	.noutputs=1,
-	.init=dec_snow_init,
-	.preprocess=dec_preprocess,
-	.process=dec_process,
-	.postprocess=dec_postprocess,
-	.uninit=dec_uninit,
-	.methods= methods
-};
-
 #endif
 
 MS_FILTER_DESC_EXPORT(ms_mpeg4_dec_desc)
 MS_FILTER_DESC_EXPORT(ms_h263_dec_desc)
 MS_FILTER_DESC_EXPORT(ms_h263_old_dec_desc)
-MS_FILTER_DESC_EXPORT(ms_snow_dec_desc)
 
 /* decode JPEG image with RTP/jpeg headers */
 MS_FILTER_DESC_EXPORT(ms_jpeg_dec_desc)
diff --git a/src/videofilters/videoenc.c b/src/videofilters/videoenc.c
index 09dcc9d..33add5d 100644
--- a/src/videofilters/videoenc.c
+++ b/src/videofilters/videoenc.c
@@ -223,19 +223,15 @@ static void enc_init(MSFilter *f, enum CodecID codec)
 }
 
 static void enc_h263_init(MSFilter *f){
-	enc_init(f,CODEC_ID_H263P);
+	enc_init(f,AV_CODEC_ID_H263P);
 }
 
 static void enc_mpeg4_init(MSFilter *f){
-	enc_init(f,CODEC_ID_MPEG4);
-}
-
-static void enc_snow_init(MSFilter *f){
-	enc_init(f,CODEC_ID_SNOW);
+	enc_init(f,AV_CODEC_ID_MPEG4);
 }
 
 static void enc_mjpeg_init(MSFilter *f){
-	enc_init(f,CODEC_ID_MJPEG);
+	enc_init(f,AV_CODEC_ID_MJPEG);
 }
 
 static void prepare(EncState *s){
@@ -243,7 +239,7 @@ static void prepare(EncState *s){
 	const int max_br_vbv=128000;
 
 	avcodec_get_context_defaults3(c, NULL);
-	if (s->codec==CODEC_ID_MJPEG)
+	if (s->codec==AV_CODEC_ID_MJPEG)
 	{
 		ms_message("Codec bitrate set to %i",c->bit_rate);
 		c->width = s->vsize.width;  
@@ -269,8 +265,7 @@ static void prepare(EncState *s){
 
 	/* ffmpeg vbv rate control consumes too much cpu above a certain target bitrate.
 	We don't use it above max_br_vbv */
-	if (s->codec!=CODEC_ID_SNOW && s->maxbr<max_br_vbv){
-		/*snow does not like 1st pass rate control*/
+	if (s->maxbr<max_br_vbv){
 		c->rc_max_rate=c->bit_rate;
 		c->rc_min_rate=0;
 		c->rc_buffer_size=c->rc_max_rate;
@@ -287,9 +282,6 @@ static void prepare(EncState *s){
 	c->gop_size=(int)s->fps*10; /*emit I frame every 10 seconds*/
 	c->pix_fmt=PIX_FMT_YUV420P;
 	s->comp_buf=allocb(c->bit_rate*2,0);
-	if (s->codec==CODEC_ID_SNOW){
-		c->strict_std_compliance=-2;
-	}
 	
 	ms_message("Codec size set to w=%i/h=%i",c->width, c->height);
 
@@ -304,7 +296,7 @@ static void prepare_h263(EncState *s){
 #endif
 	c->rtp_payload_size = s->mtu/2;
 	if (s->profile==0){
-		s->codec=CODEC_ID_H263;
+		s->codec=AV_CODEC_ID_H263;
 	}else{
 		/*
 		c->flags|=CODEC_FLAG_H263P_UMV;
@@ -313,7 +305,7 @@ static void prepare_h263(EncState *s){
 		c->flags|=CODEC_FLAG_OBMC;
 		c->flags|=CODEC_FLAG_AC_PRED;
 		*/
-		s->codec=CODEC_ID_H263P;
+		s->codec=AV_CODEC_ID_H263P;
 	}
 }
 
@@ -331,13 +323,11 @@ static void enc_preprocess(MSFilter *f){
 	EncState *s=(EncState*)f->data;
 	int error;
 	prepare(s);
-	if (s->codec==CODEC_ID_H263P || s->codec==CODEC_ID_H263)
+	if (s->codec==AV_CODEC_ID_H263P || s->codec==AV_CODEC_ID_H263)
 		prepare_h263(s);
-	else if (s->codec==CODEC_ID_MPEG4)
+	else if (s->codec==AV_CODEC_ID_MPEG4)
 		prepare_mpeg4(s);
-	else if (s->codec==CODEC_ID_SNOW){
-		/**/
-	}else if (s->codec==CODEC_ID_MJPEG){
+	else if (s->codec==AV_CODEC_ID_MJPEG){
 		/**/
 	}else {
 		ms_error("Unsupported codec id %i",s->codec);
@@ -724,12 +714,12 @@ static void split_and_send(MSFilter *f, EncState *s, mblk_t *frame){
 	uint8_t *psc;
 	uint32_t timestamp=f->ticker->time*90LL;
 	
-	if (s->codec==CODEC_ID_MPEG4 || s->codec==CODEC_ID_SNOW)
+	if (s->codec==AV_CODEC_ID_MPEG4)
 	{
 		mpeg4_fragment_and_send(f,s,frame,timestamp);
 		return;
 	}
-	else if (s->codec==CODEC_ID_MJPEG)
+	else if (s->codec==AV_CODEC_ID_MJPEG)
 	{
 		mblk_t *lqt=NULL;
 		mblk_t *cqt=NULL;
@@ -766,8 +756,9 @@ static void split_and_send(MSFilter *f, EncState *s, mblk_t *frame){
 static void process_frame(MSFilter *f, mblk_t *inm){
 	EncState *s=(EncState*)f->data;
 	AVFrame pict;
+	AVPacket pkt;
 	AVCodecContext *c=&s->av_context;
-	int error;
+	int error, got_output;
 	mblk_t *comp_buf=s->comp_buf;
 	int comp_buf_sz=comp_buf->b_datap->db_lim-comp_buf->b_datap->db_base;
 	YuvBuf yuv;
@@ -789,23 +780,18 @@ static void process_frame(MSFilter *f, mblk_t *inm){
 		s->req_vfu=FALSE;
 	}
 	comp_buf->b_rptr=comp_buf->b_wptr=comp_buf->b_datap->db_base;
-	if (s->codec==CODEC_ID_SNOW){
-		//prepend picture size
-		uint32_t header=((s->vsize.width&0xffff)<<16) | (s->vsize.height&0xffff);
-		*(uint32_t*)comp_buf->b_wptr=htonl(header);
-		comp_buf->b_wptr+=4;
-		comp_buf_sz-=4;
-	}
 
-	error=avcodec_encode_video(c, (uint8_t*)comp_buf->b_wptr,comp_buf_sz, &pict);
+	pkt.data = (uint8_t *)comp_buf->b_wptr;
+	pkt.size = comp_buf_sz;
+	error=avcodec_encode_video2(c, &pkt, &pict, &got_output);
 
-	if (error<=0) ms_warning("ms_AVencoder_process: error %i.",error);
-	else{
+	if (error<0) ms_warning("ms_AVencoder_process: error %i.",error);
+	else if (got_output) {
 		s->framenum++;
 		if (s->framenum==1){
 			video_starter_first_frame (&s->starter,f->ticker->time);
 		}
-		if (c->coded_frame->pict_type==FF_I_TYPE){
+		if (c->coded_frame->pict_type==AV_PICTURE_TYPE_I){
 			ms_message("Emitting I-frame");
 		}
 		comp_buf->b_wptr+=error;
@@ -837,7 +823,6 @@ static int enc_get_br(MSFilter *f, void *arg){
 
 static int enc_set_br(MSFilter *f, void *arg){
 	EncState *s=(EncState*)f->data;
-	bool_t snow=s->codec==CODEC_ID_SNOW;
 	s->maxbr=*(int*)arg;
 	if (s->av_context.codec!=NULL){
 		/*when we are processing, apply new settings immediately*/
@@ -847,11 +832,11 @@ static int enc_set_br(MSFilter *f, void *arg){
 		ms_filter_unlock(f);
 		return 0;
 	}
-	if (s->maxbr>=1024000 && s->codec!=CODEC_ID_H263P){
+	if (s->maxbr>=1024000 && s->codec!=AV_CODEC_ID_H263P){
 		s->vsize.width = MS_VIDEO_SIZE_SVGA_W;
 		s->vsize.height = MS_VIDEO_SIZE_SVGA_H;
 		s->fps=25;
-	}else if (s->maxbr>=800000 && s->codec!=CODEC_ID_H263P){
+	}else if (s->maxbr>=800000 && s->codec!=AV_CODEC_ID_H263P){
 		s->vsize.width = MS_VIDEO_SIZE_VGA_W;
 		s->vsize.height = MS_VIDEO_SIZE_VGA_H;
 		s->fps=25;
@@ -864,7 +849,7 @@ static int enc_set_br(MSFilter *f, void *arg){
 		s->vsize.height=MS_VIDEO_SIZE_CIF_H;
 		s->fps=17;
 		s->qmin=3;
-	}else if (s->maxbr>=170000 && s->codec!=CODEC_ID_H263P && s->codec!=CODEC_ID_H263){
+	}else if (s->maxbr>=170000 && s->codec!=AV_CODEC_ID_H263P && s->codec!=AV_CODEC_ID_H263){
 		s->vsize.width=MS_VIDEO_SIZE_QVGA_W;
 		s->vsize.height=MS_VIDEO_SIZE_QVGA_H;
 		s->fps=15;
@@ -877,8 +862,8 @@ static int enc_set_br(MSFilter *f, void *arg){
 	}else if (s->maxbr>=64000){
 		s->vsize.width=MS_VIDEO_SIZE_QCIF_W;
 		s->vsize.height=MS_VIDEO_SIZE_QCIF_H;
-		s->fps=snow ? 7 : 5;
-		s->qmin=snow ? 4 : 5;
+		s->fps=5;
+		s->qmin=5;
 	}else{
 		s->vsize.width=MS_VIDEO_SIZE_QCIF_W;
 		s->vsize.height=MS_VIDEO_SIZE_QCIF_H;
@@ -953,22 +938,6 @@ MSFilterDesc ms_mpeg4_enc_desc={
 	methods
 };
 
-MSFilterDesc ms_snow_enc_desc={
-	MS_SNOW_ENC_ID,
-	"MSSnowEnc",
-	N_("A video snow encoder using ffmpeg library."),
-	MS_FILTER_ENCODER,
-	"x-snow",
-	1, /*MS_YUV420P is assumed on this input */
-	1,
-	enc_snow_init,
-	enc_preprocess,
-	enc_process,
-	enc_postprocess,
-	enc_uninit,
-	methods
-};
-
 MSFilterDesc ms_mjpeg_enc_desc={
 	MS_JPEG_ENC_ID,
 	"MSJpegEnc",
@@ -1035,26 +1004,6 @@ MSFilterDesc ms_mpeg4_enc_desc={
 	.methods=methods
 };
 
-MSFilterDesc ms_snow_enc_desc={
-	.id=MS_SNOW_ENC_ID,
-	.name="MSSnowEnc",
-	.text=N_("The snow codec is royalty-free and is open-source. \n"
-		"It uses innovative techniques that makes it one of most promising video "
-		"codec. It is implemented within the ffmpeg project.\n"
-		"However it is under development, quite unstable and compatibility with other versions "
-		"cannot be guaranteed."),
-	.category=MS_FILTER_ENCODER,
-	.enc_fmt="x-snow",
-	.ninputs=1, /*MS_YUV420P is assumed on this input */
-	.noutputs=1,
-	.init=enc_snow_init,
-	.preprocess=enc_preprocess,
-	.process=enc_process,
-	.postprocess=enc_postprocess,
-	.uninit=enc_uninit,
-	.methods=methods
-};
-
 MSFilterDesc ms_mjpeg_enc_desc={
 	.id=MS_JPEG_ENC_ID,
 	.name="MSMJpegEnc",
@@ -1075,15 +1024,13 @@ MSFilterDesc ms_mjpeg_enc_desc={
 
 void __register_ffmpeg_encoders_if_possible(void){
 	ms_ffmpeg_check_init();
-	if (avcodec_find_encoder(CODEC_ID_MPEG4))
+	if (avcodec_find_encoder(AV_CODEC_ID_MPEG4))
 		ms_filter_register(&ms_mpeg4_enc_desc);
-	if (avcodec_find_encoder(CODEC_ID_H263)){
+	if (avcodec_find_encoder(AV_CODEC_ID_H263)){
 		ms_filter_register(&ms_h263_enc_desc);
 		ms_filter_register(&ms_h263_old_enc_desc);
 	}
-	if (avcodec_find_encoder(CODEC_ID_SNOW))
-		ms_filter_register(&ms_snow_enc_desc);
-	if (avcodec_find_encoder(CODEC_ID_MJPEG))
+	if (avcodec_find_encoder(AV_CODEC_ID_MJPEG))
 	{
 		ms_filter_register(&ms_mjpeg_enc_desc);
 	}
-- 
2.3.2

